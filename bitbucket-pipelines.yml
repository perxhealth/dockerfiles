image: public.ecr.aws/perx/node16-builder:latest

definitions:
  services:
    docker:
      memory: 2048
  steps:
    - step: &Node14
        name: Build and push -> Node 14
        services:
          - docker
        script:
          - export AWS_ACCESS_KEY_ID=$MGMT_AWS_ACCESS_KEY_ID
          - export AWS_SECRET_ACCESS_KEY=$MGMT_AWS_SECRET_ACCESS_KEY
          - export DOCKERFILE_PATH="node/node14-builder"
          - export IMAGE_NAME="node14-builder"
          - ci/scripts/login-to-ecr.sh
          - ci/scripts/build-and-push.sh

    - step: &Node16
        name: Build and push -> Node 16
        services:
          - docker
        script:
          - export AWS_ACCESS_KEY_ID=$MGMT_AWS_ACCESS_KEY_ID
          - export AWS_SECRET_ACCESS_KEY=$MGMT_AWS_SECRET_ACCESS_KEY
          - export DOCKERFILE_PATH="node/node16-builder"
          - export IMAGE_NAME="node16-builder"
          - ci/scripts/login-to-ecr.sh
          - ci/scripts/build-and-push.sh

    - step: &Elixir1.13
        name: Build and push -> Elixir 1.13
        services:
          - docker
        script:
          - export AWS_ACCESS_KEY_ID=$MGMT_AWS_ACCESS_KEY_ID
          - export AWS_SECRET_ACCESS_KEY=$MGMT_AWS_SECRET_ACCESS_KEY
          - export DOCKERFILE_PATH="elixir/elixir1.13-builder"
          - export IMAGE_NAME="elixir1.13-builder"
          - ci/scripts/login-to-ecr.sh
          - ci/scripts/build-and-push.sh

    - step: &AWSCLI
        name: Build and push -> AWS CLI
        services:
          - docker
        script:
          - export AWS_ACCESS_KEY_ID=$MGMT_AWS_ACCESS_KEY_ID
          - export AWS_SECRET_ACCESS_KEY=$MGMT_AWS_SECRET_ACCESS_KEY
          - export DOCKERFILE_PATH="aws"
          - export IMAGE_NAME="aws"
          - ci/scripts/login-to-ecr.sh
          - ci/scripts/build-and-push.sh

pipelines:
  branches:
    '**':
      - parallel:
        - step: *Node14
        - step: *Node16
        - step: *Elixir1.13
        - step: *AWSCLI
